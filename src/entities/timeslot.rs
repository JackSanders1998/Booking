//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "timeslot")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub start: DateTime,
    pub end: DateTime,
    pub venue_id: i32,
    pub created_at: Option<DateTimeUtc>,
    pub last_modified: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::venue::Entity",
        from = "Column::VenueId",
        to = "super::venue::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Venue,
}

impl Related<super::venue::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Venue.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
